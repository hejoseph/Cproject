
int genRandNb(int i, int j, unsigned short ** pTab, int ligne , int colonne){
	int r=0;
	if (i == 0){
		if (j == 0){
			while (!r&9){
				r = genNbBetween(9,13);
			}
		} else if (j == colonne-1){
			if (pTab[i][j-1] & 4){
				r = 13;
			} else {
				if (pTab[i][j-1] == 11){
					r = 12;
				}
			}
			while (!r & 12){
				r = genNbBetween(12, 14);
			}
		} else {
			if (pTab[i][j - 1] & 4){
				while (!r & 9){
					r = genNbBetween(9, 13);
				}
			} else {
				if (pTab[i][j - 1] == 11) {
					while (!r & 8){
						r = genNbBetween(8, 12);
					}
				}
			}
			while (!r & 8){
				r = genNbBetween(8, 14);
			}
		}
	} else if (i == ligne-1){
		if (j == 0){
			if (pTab[i - 1][j] & 2){
				r = 11;
			} else {
				if (pTab[i - 1][j] == 13){
					r = 3;
				}
			}
			while (!r & 3){
				r = genNbBetween(3, 11);
			}
		} else if (j == colonne-1){
			if (pTab[i-1][j] & 2){
				r = 14;
			} else if (pTab[i][j-1] & 4){
				r = 7;
			} else {
				r = 6;
			}
			
		} else {
			if (pTab[i - 1][j] & 2 && pTab[i][j-1] & 4){
				r = 11;
			} else if (pTab[i][j - 1] & 4){
				if ( pTab[i-1][j]==13 ){
					r = 3;
				}
				while (!r & 3){
					r = genNbBetween(3, 11);
				}
			} else if (pTab[i-1][j] & 2){
				if (pTab[i][j - 1] == 11) {
					r = 10;
				} 
				while (!r & 10){
					r = genNbBetween(10, 14);
				}
			} else {
				if (pTab[i - 1][j] == 13){
					r = 3;
				} else if (pTab[i][j - 1] == 11) {
					r = 10;
				}
				while (!r & 2){
					r = genNbBetween(2, 6);
				}
			}
		}
	} else {
		if (j == 0){
			if (pTab[i - 1][j] & 2){
				while (!r & 1){
					r = genNbBetween(9, 13);
				}
			} else {
				if (pTab[i - 1[j] == 13){
					while (!r & 1){
						r = genNbBetween(1, 5);
					}
				}
			}
			while (!r & 1){
				r = genNbBetween(1, 14);
			}
		} else if (j == colonne-1){
			if (pTab[i-1][j] & 2 && pTab[i][j-1] & 4) {
				r = 13;
			} else if (pTab[i - 1][j] & 2){
				if (pTab[i][j - 1] == 11){
					r = 12;
				}
				while (!r & 4){
					r = genNbBetween(12, 14);
				}
			} else if (pTab[i][j-1] & 4){
				if (pTab[i-1][j] == 13){
					r = 5;
				}
			} else {
				if (pTab[i][j - 1] == 11 && pTab[i-1][j] == 13){
					r = 4;
				} else if (pTab[i][j - 1] == 11){
					while (!r & 4){
						r = genNbBetween(4, 12);
					}
				} else if (pTab[i - 1][j] == 13) {
					while (!r & 4){
						r = genNbBetween(4, 6);
					}
				}
				while (!r & 4){
					r = genNbBetween(4, 14);
				}
			}
		} else {
			if (pTab[i - 1][j] & 2 && pTab[i][j - 1] & 4) {
				while (!r & 9){
					r = genNbBetween(9, 14);
				}
			} else if (pTab[i - 1][j] & 2){
				if (pTab[i][j - 1] == 11){
					while (!r & 8){
						r = genNbBetween(8, 12);
					}
				}
				while (!r & 4){
					r = genNbBetween(12, 14);
				}
			} else if (pTab[i][j - 1] & 4){
				if (pTab[i - 1][j] == 13){
					r = 5;
				}
			} else {
				if (pTab[i][j - 1] == 11 && pTab[i - 1][j] == 13){
					r = 4;
				} else if (pTab[i][j - 1] == 11){
					while (!r & 4){
						r = genNbBetween(4, 12);
					}
				} else if (pTab[i - 1][j] == 13) {
					while (!r & 4){
						r = genNbBetween(4, 6);
					}
				}
				while (!r & 4){
					r = genNbBetween(4, 14);
				}
			}
		}
	}

	return r;
}